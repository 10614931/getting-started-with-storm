[[getting_started]]
== Getting Started

In this chapter we will create a Storm project and our first Storm topology.

TIP: The following assumes that you have at least version 1.6 of the Java Runtime Environment (JRE) installed. Our recommendation is to use the JRE provided by Oracle, which can be found at (link:www.java.com/downloads/) 

[[operation_modes]]
=== Operation Modes

Before we start, it is important to understand _Storm operation modes_. There are two different ways we can run Storm.

==== Local Mode

In this mode, Storm topologies run on our local machine. Local Mode is perfect for development and testing your topology since you'll be able to see how your topology is running and debug it. You can also change different parameters that enable you to see how your topology runs in different cluster configuration environments. We will see more about that later (<<testing_our_topology, Testing our topology>>).

In all of the examples in this chapter we will work in *Local Mode*. 

==== Remote Mode

In Remote Mode you submit your topology to the Storm cluster, so it runs distributed across the machines in the cluster. Remote Mode doesn't show debugging information, which is why it's considered *Production Mode*. However it's possible to run your topology in Remote Mode in a development environment (and it's recommendable to do so). We will show how to do so in a later chapter (<<testing_our_topology, Testing our topology>>)

We will see more about *Remote Mode* in the chapter <<a_real_life_example,A Real Life Example>>

=== Hello world Storm

For this project we will create a simple topology to count words. We can consider this the _Hello World_ of Storm topologies, however it is a very powerful topology because it can scale to virtually infinite size, and with some small modifications we can create a very good statistical system. For example we could modify the project to find trending topics on Twitter.

To create the topology we will use a *spout* that will be responsible for reading the words, a first *bolt* to normalize the words and a second *bolt* to count each word, as we can see in figure 1 <<getting_started_topology_img,Fig 1>>
 

[[getting_started_topology_img]]
image:figs/getting-started-topology.jpg[Fig 1 - Getting started topology]

==== Checking Java installation

The first thing to do to set up our environment is check our Java version. Open a console window and run the command *"java -version"*, You should see something similar to the following:

=======================================================
~$ java -version


java version "1.6.0_26"

Java(TM) SE Runtime Environment (build 1.6.0_26-b03)

Java HotSpot(TM) Server VM (build 20.1-b02, mixed mode)

=======================================================

If not please check your Java installation. (See link:http://www.java.com/download/[])


==== Creating the project

TIP: For Storm development we will use link:http://maven.apache.org/[Apache Maven] although is not necessary be a Maven expert to use Storm, it's recommended to know the basics of how Maven works. You can find more information on the Apache Maven website (link:http://maven.apache.org/[]). 

To create our project we will start by creating a folder where we will place our application (like any Java application).

Next we need to create a pom.xml file. We will use the dependencies and Maven repository set up by nathanmarz (https://github.com/nathanmarz/). These dependencies can be found at https://github.com/nathanmarz/storm/wiki/Maven.  _The Storm Maven dependencies reference all the libraries required to run Storm in_ *Local Mode*

Using these dependencies we can create a pom.xml file with the basic components necessary to run our topology

----
include::code/getting-started/pom.xml[]
----

The application will have the following structure:

===================================
~$ tree getting-started/

    getting-started/
            ├── pom.xml
            └── src
                └── main
                    └── java
                        ├── spouts
                        └── bolts

===================================


=== Creating our first topology

To create our first topology we will create all classes required to run the word count. It's possible that some parts of the example may not be clear at this stage, however we will explain them in further depth in subsequent chapters.  

==== Spout

text

==== Bolt

text

==== The main class

text


==== Show in action

text

=== Conclusions

text
