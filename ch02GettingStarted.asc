[[getting_started]]
== Getting Started

In this chapter we will create a Storm project and our first Storm topology.

TIP: All of the following assume that you have Java Runtime Environment (JRE) installed at least in their version 1.6, our recommendation is to use one provided by Oracle, which can be found at (link:www.java.com/downloads/) 

[[operation_modes]]
=== Operation Modes

Before we start, it is important to know about the _Storm operation modes_. There are two different ways we can run storm.

==== Local Mode

In this mode storm topologies run in our local machine. This mode is perfect for development and testing your topology since you'll be able to see how your topology is running and you'll be able to debug it. Also you can change different parameters that enable you to see how your topology run in different cluster configuration environments. We will see more about that later (<<testing_our_topology, Testing our topology>>).

In all of the examples of this chapter we will work in *Local Mode*. 

==== Remote Mode

In the remote mode you will use your computer to submIt your topology to the storm cluster, so this will run in really distribute mode across your cluster. It will also avoid showing you lots of debugging information. This is why we consider this mode as the *Production Mode*. However it is possible to run your topology in remote mode into development enviroment (and It's recommendable to do that), We will how to do It later (<<testing_our_topology, Testing our topology>>)

We will see more about the *Remote Mode* in the chapter <<a_real_life_example,A Real Life Example>>

=== Hello world storm

For this project we will create a simple topology. It will consist in a *Count Word Topology*. We can considerate this as the _Hello World_ of the storm topologies, however it is a very powerfull topology because this can scale virtually to the infinity and with some small modifications we can create a very good stats system, for example we could modify this to found thrending topics at twitter.

To create the topology we will use a *spout* that will be responsible of reading the words, a first *bolt* to normalize the words and a second *bolt* to count each word, as we can see at the picture <<getting_started_topology_img,Fig 1>>
 

[[getting_started_topology_img]]
image:figs/getting-started-topology.jpg[Fig 1 - Getting started topology]

==== Checking java installation

The first thing to do for set-up our environment it is check our java version, to do that open a console window and runs the command *"java -version"*, You must see something similar to this:

=======================================================
~$ java -version


java version "1.6.0_26"

Java(TM) SE Runtime Environment (build 1.6.0_26-b03)

Java HotSpot(TM) Server VM (build 20.1-b02, mixed mode)

=======================================================

If this not occurs please check your java instalation, You could check how to do it at link:http://www.java.com/download/[]


==== Creating the project

TIP: For the storm development we will use link:http://maven.apache.org/[Apache Maven] although is not necessary be a maven expert to use storm is very recommendable know the basics and how Maven works, You could find all the information into the Apache Maven website (link:http://maven.apache.org/[]). 

So, to create our project We will start creating a folder where we will place our application (like another java application).

Next that We need is create the pom.xml file, To do that we will use the dependency and maven repository given by nathanmarz (https://github.com/nathanmarz/) this dependencies We can found at https://github.com/nathanmarz/storm/wiki/Maven.  _The storm maven dependencies have all things to run storm in_ *Local Mode*

Using this dependencies we can create a pom.xml file with the basic things to run our topology

----
include::code/getting-started/pom.xml[]
----

In the example the application will have the next structure:

===================================
~$ tree getting-started/

    getting-started/
            ├── pom.xml
            └── src
                └── main
                    └── java
                        ├── spouts
                        └── bolts

===================================


=== Creating our first topology

To create our first topology We will create all classes necesaries to run the count word, It is possible that some things may not be clear, We will be in deep in the following chapters.  

==== Spout

text

==== Bolt

text

==== The main class

text


==== Show in action

text

=== Conclusions

text
