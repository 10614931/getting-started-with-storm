[[getting_started]]
== Getting Started

In this chapter We will look how to create an storm project and We will create our first storm topology

TIP: All of the following assume that you have Java Runtime Environment (JRE) installed at least in their version 1.6, our recommendation is to use one provided by Oracle, which can be found at (link:www.java.com/downloads/) 

[[operation_modes]]
=== Operation Modes

Before start, It is important to know about the _Storm operations modes_ this It is the name that receive the two storm running ways

==== Local Mode

In this mode all the storm topology runs in your local machine, this mode It is excelent for develope and test your topology because you be able to see how your topology is running and you can debug It, also you can change different parameters that enable you how your topology runs in differents cluster configuration environments, We will see more about that later (<<testing_our_topology, Testing our topology>>)

In all examples chapter We will work in the *Local Mode* 

==== Remote Mode

In the remote mode you will use your computer to submIt your topology to the Storm cluster, so this will run in really distribute mode across your cluster, We can considerate the remote mode as the *Production Mode* because ever you will run storm in production you will use this mode hoWever It is possible run your topology in remote mode into development enviroment (and It's recommendable to do that), We will how to do It later (<<testing_our_topology, Testing our topology>>)

We will see more about the *Remote Mode* in the chapter <<a_real_life_example,A Real Life Example>>

=== Hello world storm

For this project we will create a simple topology, It will consist in a *Count Word Topology*, We can considerate this as the _Hello World_ of the storm topologies however It is a very powerfull topology because this can scale virtually to the infinity and with some small modifications we can create a very good stats system, for example we could modify this to found thrending topics at twitter.

To create the topology We will use an *spout* who will be responsible of read the words, a first *volt* to normalize the words and a second *volt* to count each word, as We can see at the picture <<getting_started_topology_img,Fig 1>>
 

[[getting_started_topology_img]]
image:figs/getting-started-topology.jpg[Fig 1 - Getting started topology]

==== Checking java installation

The first thing to do for set-up our environment it is check our java version, to do that open a console window and runs the command *"java -version"*, You must see something similar to this:

=======================================================
~$ java -version


java version "1.6.0_26"

Java(TM) SE Runtime Environment (build 1.6.0_26-b03)

Java HotSpot(TM) Server VM (build 20.1-b02, mixed mode)

=======================================================

If this not occurs please check your java instalation, You could check how to do it at link:http://www.java.com/download/[]


==== Creating the project

TIP: For the storm development we will use link:http://maven.apache.org/[Apache Maven] although is not necessary be a maven expert to use storm is very recommendable know the basics and how Maven works, You could find all the information into the Apache Maven website (link:http://maven.apache.org/[]). 

So, to create our project We will start creating a folder where we will place our application (like another java application).

Next that We need is create the pom.xml file, To do that we will use the dependency and maven repository given by nathanmarz (https://github.com/nathanmarz/) this dependencies We can found at https://github.com/nathanmarz/storm/wiki/Maven.  _The storm maven dependencies have all things to run storm in_ *Local Mode*

Using this dependencies we can create a pom.xml file with the basic things to run our topology

----
include::code/getting-started/pom.xml[]
----

In the example the application will have the next structure:

===================================
~$ tree getting-started/

    getting-started/
            ├── pom.xml
            └── src
                └── main
                    └── java
                        ├── spouts
                        └── volts

===================================


=== Creating our first topology

To create our first topology We will create all classes necesaries to run the count word, It is possible that some things may not be clear, We will be in deep in the following chapters.  

==== Spout

text

==== Volt

text

==== The main class

text


==== Show in action

text

=== Conclusions

text
