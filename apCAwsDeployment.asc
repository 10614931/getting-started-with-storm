[[amazon_ec2_deployment]]
== Appendix C: AWS Deployment

=== About Amazon Web Services (AWS):

Amazon Web Services is a set of infrastructure services that the company offers in an on-demand basis. It includes plain computing resources, named _EC2_ (Elastic Compute Cloud: link:http://aws.amazon.com/ec2/[]) that includes: Servers, Volumes, Load Balancers, etc. There are also other platform services such as: Databases, Caches, Storage APIs, Queuing, etc. But for now, we will use only the compute resources.

In this appendix we will walk through the steps of creating a server with the image _(AMI: Amazon Machine Images)_ that we provide with all the _Storm_ stuff previously installed.

TIP: You'll have to pay for the AWS services you use. You'll need to have a credit card to do so. But Amazon offers a free tier under certain conditions, you can check if you are elegible here: link:http://aws.amazon.com/free/[]

=== Creating an EC2 instance with the provided AMI:

- Login or Signup to AWS: link:http://aws.amazon.com/[]
- Enter to the AWS Management Console: link:https://console.aws.amazon.com/console/home[] and choose the EC2 tab.

image::figs/apCEC2.png[]

- Click the Launch instance button.
- Choose the Quick Launch Wizard.
- _Name your instance_: Build And Test Environment.
- For the _Key Pair_ Click _Create New_ and then _Download_. Use _mykey_ as _Name_. You will download a mykey.pem file, keep it, you will need it soon.
- Select: _More Amazon Machine Images_
- Search for: "Getting Started With Storm".
- Continue.
- Public AMIs: Search for _"Getting Started With Storm"_
- Click on the AMI: TODO:AMI ID
- Click _Launch_.


You should see the success screen that looks like the following.

.Success machine deploy
[FIGAC02]
image::figs/apCSuccess.png[]


Congratulations, you have successfully created the Storm Build and Test machine!


=== Connecting to the machine:

- Go to the instances page in the EC2 Console. It should look like this:

.EC2 Instances
[FIGAC03]
image::figs/apCInstancesConnect.png[]

- Right click in the instance you've created and click _Connect_. A window like this should appear:

.Connection Window
[FIGAC04]
image::figs/apCConnect.png[]

- Follow the instructions in the window.

Once you are connected, screen should look like this:
----
Last login: Mon Apr  2 21:12:54 2012 from ol24-246.fibertel.com.ar

       __|  __|_  )
       _|  (     /   Amazon Linux AMI
      ___|\___|___|

See /usr/share/doc/system-release/ for latest release notes.
There are 27 security update(s) out of 208 total update(s) available
Amazon Linux version 2012.03 is available.
[ec2-user@ip-10-243-9-36 ~]$ 

----

TIP: Note that the user you should use to login is _ec2-user_ instead of _root_.

=== Packages installed:



==== Node.JS:Node.JS is a Javascript based library which runs on top of the Google's V2. It's event oriented and ideal for IO intensive webservers development. The reason for that is that it doesn't use threads to wait for multiple blocking IO operations. For mor information pleae go to the project's website at: http://node js.org

==== Storm Deploy:
Storm deploy is a framework also created by Nathan Marz. It's objective is to create a Storm cluster from the scratch and configure it using Amazon EC2. The project GitHub page is: link:https://github.com/nathanmarz/storm-deploy[]

==== Apache Maven:
Maven is a Java build tool. It's purpouse is to automate the building process. It also solves the library dependencies resolution and download. The Apache M
aven Home Page is: link:http://maven.apache.org/[]

==== GitHub:
GitHub is a social coding platform. The search engine source code is hosted in the git service that GitHub provides.


=== Building and running tests

=== Actions

==== Starting WebServers

=== Create a storm cluster using Storm Deploy

==== Configuring the machine

AWS_USER_ID
IDENTITY
CREDENTIAL

==== Creating the cluster

==== Deploying the topology


